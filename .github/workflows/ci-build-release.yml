name: CI Build and Release

on:
  push:
    branches:
      - main
      - test-ci-pipeline
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: '21'
          distribution: 'graalvm'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          native-image-job-reports: 'true'

      - name: Install Clojure CLI and Babashka
        uses: DeLaGuardo/setup-clojure@12.5
        with:
          cli: 'latest'
          bb: 'latest'

      - name: Run CI Task
        run: clojure -T:build ci

      - name: Archive build artifact
        uses: actions/upload-artifact@v2
        with:
          name: clj-mergetool-${{ matrix.os }}
          path: target/clj-mergetool${{ matrix.os == 'windows-latest' && '.exe' || '' }}

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download build artifacts for Linux
        uses: actions/download-artifact@v2
        with:
          name: clj-mergetool-ubuntu
          path: target/clj-mergetool-linux

      - name: Download build artifacts for Windows
        uses: actions/download-artifact@v2
        with:
          name: clj-mergetool-windows
          path: target/clj-mergetool-windows.exe

      - name: Download build artifacts for macOS
        uses: actions/download-artifact@v2
        with:
          name: clj-mergetool-macos
          path: target/clj-mergetool-macos

      - name: Set up GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: '21'
          distribution: 'graalvm'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          native-image-job-reports: 'true'

      - name: Install Clojure CLI and Babashka
        uses: DeLaGuardo/setup-clojure@12.5
        with:
          cli: 'latest'
          bb: 'latest'

      - name: Run Release Version Task
        if: github.ref == 'refs/heads/main'
        run: clojure -T:build release-version

      - name: Push changes
        if: github.ref == 'refs/heads/main'
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git push origin main

      - name: Create Release
        if: github.ref == 'refs/heads/main'
        uses: softprops/action-gh-release@v1
        with:
          files: |
            target/clj-mergetool-linux
            target/clj-mergetool-windows.exe
            target/clj-mergetool-macos
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
